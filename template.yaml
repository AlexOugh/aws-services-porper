AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Parameters:
  RedirectUri:
    Type: String
    Default: ""
    Description: Redirect Uri after Successful Authentication in Identiy Providers
  GoogleTokeninfoEndpoint:
    Type: String
    Default: "https://www.googleapis.com/oauth2/v3/tokeninfo?id_token="
    Description: Endpoint url to confirm Google tokens
  GoogleClientId:
    Type: String
    Default: ""
    Description: Google Client Id
  GoogleClientSecret:
    Type: String
    NoEcho: true
    Default: ""
    Description: Google Client Secret
  SsoHost:
    Type: String
    Default: ""
    Description: SSO Host Name
  SsoClientId:
    Type: String
    Default: ""
    Description: SSO Client Id
  SsoClientSecret:
    Type: String
    Default: ""
    NoEcho: true
    Description: SSO Client Secret
  GithubAuthEndpoint:
    Type: String
    Default: "https://github.com/login/oauth"
    Description: Endpoint url to confirm GitHub tokens
  GithubApiEndpoint:
    Type: String
    Default: "https://api.github.com"
    Description: GitHub API Endpoint url
  GithubClientId:
    Type: String
    Default: ""
    Description: GitHub Client Id
  GithubClientSecret:
    Type: String
    NoEcho: true
    Default: ""
    Description: GitHub Client Secret
  SlackAuthEndpoint:
    Type: String
    Default: "https://slack.com/oauth"
    Description: Endpoint url to confirm Slack tokens
  SlackApiEndpoint:
    Type: String
    Default: "https://slack.com/api"
    Description: Slack API Endpoint url
  SlackClientId:
    Type: String
    Default: ""
    Description: Slack Client Id
  SlackClientSecret:
    Type: String
    NoEcho: true
    Default: ""
    Description: Slack Client Secret
  SlackSlashCommandToken:
    Type: String
    NoEcho: true
    Default: ""
    Description: Slack Token for Slash Command
  ReadCapacityUnit:
    Description: Read Capacity Unit for DynamoDB Tables
    Type: Number
    Default: 5
  WriteCapacityUnit:
    Description: Write Capacity Unit for DynamoDB Tables
    Type: Number
    Default: 5
  PorperLambdaLayerArn:
    Description: Arn of the Porper Lambda Layer
    Type: String

Resources:
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacityUnit
        WriteCapacityUnits: !Ref WriteCapacityUnit
  GroupTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacityUnit
        WriteCapacityUnits: !Ref WriteCapacityUnit
  AccessTokenTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "access_token"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "access_token"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacityUnit
        WriteCapacityUnits: !Ref WriteCapacityUnit
  PermissionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacityUnit
        WriteCapacityUnits: !Ref WriteCapacityUnit
  InvitedUserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "email"
          AttributeType: "S"
        -
          AttributeName: "auth_type"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "email"
          KeyType: "HASH"
        -
          AttributeName: "auth_type"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacityUnit
        WriteCapacityUnits: !Ref WriteCapacityUnit
  UserGroupTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "user_id"
          AttributeType: "S"
        -
          AttributeName: "group_id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "user_id"
          KeyType: "HASH"
        -
          AttributeName: "group_id"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacityUnit
        WriteCapacityUnits: !Ref WriteCapacityUnit
  RoleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacityUnit
        WriteCapacityUnits: !Ref WriteCapacityUnit
  FunctionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacityUnit
        WriteCapacityUnits: !Ref WriteCapacityUnit
  AWSAccountTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacityUnit
        WriteCapacityUnits: !Ref WriteCapacityUnit
  LambdaFunctionIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "AllowLambdaServiceToAssumeRole"
            Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Principal:
              Service:
                - "lambda.amazonaws.com"
      Policies:
        -
          PolicyName: "InlinePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "dynamodb:DeleteItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:BatchGetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                  - "dynamodb:Scan"
                  - "dynamodb:UpdateItem"
                  - "kms:Encrypt"
                  - "kms:Decrypt"
                Resource: "*"
              -
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
  AuthorizerLambdaFunctionIAMRole:
      Type: "AWS::IAM::Role"
      Properties:
          Path: "/"
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Sid: "AllowLambdaServiceToAssumeRole"
                Effect: "Allow"
                Action:
                  - "sts:AssumeRole"
                Principal:
                  Service:
                    - "lambda.amazonaws.com"
          Policies:
            -
              PolicyName: "InlinePolicy"
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  -
                    Effect: "Allow"
                    Action:
                      - "logs:CreateLogGroup"
                      - "logs:CreateLogStream"
                      - "logs:PutLogEvents"
                    Resource: "arn:aws:logs:*:*:*"
                  -
                    Effect: "Allow"
                    Action:
                      - "dynamodb:*"
                    Resource: "*"
  AuthorizerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: porper_authorizer.lambda_handler
      Runtime: python3.6
      CodeUri: ./src
      Layers:
        - !Ref PorperLambdaLayerArn
      Role: !GetAtt AuthorizerLambdaFunctionIAMRole.Arn
      Timeout: 300
  InitializerLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: init_dynamodb.lambda_handler
      Runtime: python3.6
      CodeUri: ./src
      Layers:
        - !Ref PorperLambdaLayerArn
      Role: !GetAtt LambdaFunctionIAMRole.Arn
      Timeout: 300
      Environment:
        Variables:
          GROUP_TABLE_NAME: !Ref GroupTable
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionUri: ./swagger.yaml
      StageName: Prod
      Variables:
        LambdaFunctionName: !Ref ProxyFunction
  ProxyFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: api_handler.lambda_handler
      Runtime: python3.6
      CodeUri: ./src
      Layers:
        - !Ref PorperLambdaLayerArn
      Role: !GetAtt LambdaFunctionIAMRole.Arn
      Timeout: 300
      Environment:
        Variables:
          GOOGLE_TOKENINFO_ENDPOINT: !Ref GoogleTokeninfoEndpoint
          GOOGLE_CLIENT_ID: !Ref GoogleClientId
          GOOGLE_CLIENT_SECRET: !Ref GoogleClientSecret
          GOOGLE_REDIRECT_URI: !Ref RedirectUri
          SSO_HOST: !Ref SsoHost
          SSO_CLIENT_ID: !Ref SsoClientId
          SSO_CLIENT_SECRET: !Ref SsoClientSecret
          SSO_REDIRECT_URI: !Ref RedirectUri
          GITHUB_AUTH_ENDPOINT: !Ref GithubAuthEndpoint
          GITHUB_API_ENDPOINT: !Ref GithubApiEndpoint
          GITHUB_CLIENT_ID: !Ref GithubClientId
          GITHUB_CLIENT_SECRET: !Ref GithubClientSecret
          GITHUB_REDIRECT_URI: !Ref RedirectUri
          SLACK_AUTH_ENDPOINT: !Ref SlackAuthEndpoint
          SLACK_API_ENDPOINT: !Ref SlackApiEndpoint
          SLACK_CLIENT_ID: !Ref SlackClientId
          SLACK_CLIENT_SECRET: !Ref SlackClientSecret
          SLACK_SLASH_COMMAND_TOKEN: !Ref SlackSlashCommandToken
          SLACK_REDIRECT_URI: !Ref RedirectUri
          ACCESS_TOKEN_TABLE_NAME: !Ref AccessTokenTable
          GROUP_TABLE_NAME: !Ref GroupTable
          INVITED_USER_TABLE_NAME: !Ref InvitedUserTable
          PERMISSION_TABLE_NAME: !Ref PermissionTable
          USER_GROUP_REL_TABLE_NAME: !Ref UserGroupTable
          USER_TABLE_NAME: !Ref UserTable
          ROLE_TABLE_NAME: !Ref RoleTable
          FUNCTION_TABLE_NAME: !Ref FunctionTable
          AWS_ACCOUNT_TABLE_NAME: !Ref AWSAccountTable
      Events:
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /{proxy+}
            Method: ANY
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.lambda_handler
      Runtime: python3.6
      CodeUri: ./src
      Layers:
        - !Ref PorperLambdaLayerArn
      Role: !GetAtt LambdaFunctionIAMRole.Arn
      Timeout: 300
      Environment:
        Variables:
          GOOGLE_TOKENINFO_ENDPOINT: !Ref GoogleTokeninfoEndpoint
          GOOGLE_CLIENT_ID: !Ref GoogleClientId
          GOOGLE_CLIENT_SECRET: !Ref GoogleClientSecret
          GOOGLE_REDIRECT_URI: !Ref RedirectUri
          SSO_HOST: !Ref SsoHost
          SSO_CLIENT_ID: !Ref SsoClientId
          SSO_CLIENT_SECRET: !Ref SsoClientSecret
          SSO_REDIRECT_URI: !Ref RedirectUri
          GITHUB_AUTH_ENDPOINT: !Ref GithubAuthEndpoint
          GITHUB_API_ENDPOINT: !Ref GithubApiEndpoint
          GITHUB_CLIENT_ID: !Ref GithubClientId
          GITHUB_CLIENT_SECRET: !Ref GithubClientSecret
          GITHUB_REDIRECT_URI: !Ref RedirectUri
          SLACK_AUTH_ENDPOINT: !Ref SlackAuthEndpoint
          SLACK_API_ENDPOINT: !Ref SlackApiEndpoint
          SLACK_CLIENT_ID: !Ref SlackClientId
          SLACK_CLIENT_SECRET: !Ref SlackClientSecret
          SLACK_SLASH_COMMAND_TOKEN: !Ref SlackSlashCommandToken
          SLACK_REDIRECT_URI: !Ref RedirectUri
          ACCESS_TOKEN_TABLE_NAME: !Ref AccessTokenTable
          GROUP_TABLE_NAME: !Ref GroupTable
          INVITED_USER_TABLE_NAME: !Ref InvitedUserTable
          PERMISSION_TABLE_NAME: !Ref PermissionTable
          USER_GROUP_REL_TABLE_NAME: !Ref UserGroupTable
          USER_TABLE_NAME: !Ref UserTable
          ROLE_TABLE_NAME: !Ref RoleTable
          FUNCTION_TABLE_NAME: !Ref FunctionTable
          AWS_ACCOUNT_TABLE_NAME: !Ref AWSAccountTable
Outputs:
  ApiUrl:
    Description: URL of your API endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref ApiGatewayApi
        - '.execute-api.'
        - !Ref 'AWS::Region'
        - '.amazonaws.com/Prod'
  AuthorizerLambdaFunctionArn:
    Description: "Authorizer Lambda Function ARN"
    Value: !GetAtt AuthorizerLambdaFunction.Arn
  InitializerLambdaFunctionArn:
    Description: "Initializer Lambda Function ARN"
    Value: !GetAtt InitializerLambdaFunction.Arn
  ProxyLambdaFunctionArn:
    Description: "Proxy Lambda Function ARN"
    Value: !GetAtt ProxyFunction.Arn
  LambdaFunctionArn:
    Description: "Lambda Function ARN"
    Value: !GetAtt LambdaFunction.Arn
